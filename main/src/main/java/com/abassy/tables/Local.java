package com.abassy.tables;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Local generated by hbm2java
 */
@Entity
@Table(name = "local", catalog = "abassy_db")
public class Local implements java.io.Serializable {

	private Integer id;
	private String direccion;
	private String ciudad;
	private Set<Pedido> pedidos = new HashSet<Pedido>(0);
	private Set<Zona> zonas = new HashSet<Zona>(0);
	private Set<CierreCaja> cierreCajas = new HashSet<CierreCaja>(0);
	private Set<Usuario> usuarios = new HashSet<Usuario>(0);

	public Local() {
	}

	public Local(String direccion, String ciudad, Set<Pedido> pedidos, Set<Zona> zonas, Set<CierreCaja> cierreCajas,
			Set<Usuario> usuarios) {
		this.direccion = direccion;
		this.ciudad = ciudad;
		this.pedidos = pedidos;
		this.zonas = zonas;
		this.cierreCajas = cierreCajas;
		this.usuarios = usuarios;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "direccion", length = 65535)
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@Column(name = "ciudad", length = 65535)
	public String getCiudad() {
		return this.ciudad;
	}

	public void setCiudad(String ciudad) {
		this.ciudad = ciudad;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "local")
	public Set<Pedido> getPedidos() {
		return this.pedidos;
	}

	public void setPedidos(Set<Pedido> pedidos) {
		this.pedidos = pedidos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "local")
	public Set<Zona> getZonas() {
		return this.zonas;
	}

	public void setZonas(Set<Zona> zonas) {
		this.zonas = zonas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "local")
	public Set<CierreCaja> getCierreCajas() {
		return this.cierreCajas;
	}

	public void setCierreCajas(Set<CierreCaja> cierreCajas) {
		this.cierreCajas = cierreCajas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "local")
	public Set<Usuario> getUsuarios() {
		return this.usuarios;
	}

	public void setUsuarios(Set<Usuario> usuarios) {
		this.usuarios = usuarios;
	}

}
